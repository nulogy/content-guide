{"version":3,"sources":["webpack://nulogy.design/./src/pages/grammar-and-mechanics/symbols.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","NoExample","YesExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent","children","fontStyle","display","position","top","icon","color","mr","h1","maxWidth","COPY_WIDTH","m","h2","mt","mx","h3","h4","p","mb","blockquote","fontSize","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"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","file":"component---src-pages-grammar-and-mechanics-symbols-mdx-19c536adbc34a21902ad.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst NoExample = makeShortcode(\"NoExample\");\nconst YesExample = makeShortcode(\"YesExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Symbols`}</h1>\n    <h2>{`Hyphens`}</h2>\n    <p>{`Use a hyphen \"-\" to indiciate a range.`}</p>\n    <NoExample mdxType=\"NoExample\">\n  Search pallets produced from April 1, 2021 to April 30,2021\n    </NoExample>\n    <YesExample mdxType=\"YesExample\">\n  Search pallets produced from April 1, 2021 - April 30, 2021\n    </YesExample>\n    <h2>{`Percentages`}</h2>\n    <p>{`Always use the \"%\" symbol.`}</p>\n    <NoExample mdxType=\"NoExample\">80 percent of pallets produced.</NoExample>\n    <YesExample mdxType=\"YesExample\">80% of pallets produced.</YesExample>\n    <h2>{`Currrency`}</h2>\n    <p>{`Specific currencies use the three digit currency code directly after the amount. Our customers do a lot of international business and this is the most clear way to discern currency as some currencies (like Canada and the United States) use the same symbol.`}</p>\n    <NoExample mdxType=\"NoExample\">The price per unit for Item 12345 is $50</NoExample>\n    <YesExample mdxType=\"YesExample\">The price per unit for Item 12345 is 50 USD</YesExample>\n    <h2>{`Ampersands`}</h2>\n    <p>{`Wherever possible, write out “and”. Only use “&” if you refer to a formal name that includes the symbol (such as the name of a company), or if you are really tight on space.`}</p>\n    <NoExample mdxType=\"NoExample\">\n  Our products include the Operational Solution & the Ecosystem Solution.\n    </NoExample>\n    <YesExample mdxType=\"YesExample\">\n  Our products include the Operational Solution and the Ecosystem Solution.\n    </YesExample>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}