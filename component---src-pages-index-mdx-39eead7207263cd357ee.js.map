{"version":3,"sources":["webpack://nulogy.design/./src/pages/index.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","YesExample","children","fontStyle","display","position","top","icon","color","mr","NoExample","h1","maxWidth","COPY_WIDTH","m","h2","mt","mx","h3","h4","p","mb","blockquote","fontSize","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"8OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,2CACA,kSACA,kVACA,+JACA,mBACE,cAAIC,WAAW,MAAf,gBACA,cAAIA,WAAW,MAAf,yBACA,cAAIA,WAAW,MAAf,4BACA,cAAIA,WAAW,MAAf,uBACA,cAAIA,WAAW,MAAf,yCACA,cAAIA,WAAW,MAAf,wBAMNJ,EAAWK,gBAAiB,G,wHCjCfC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaL,GAAhB,8BACxB,gBAAC,KAAD,eAAKM,UAAU,UAAaN,GAC1B,gBAAC,KAAD,CAAKO,QAAQ,SAASC,SAAS,WAAWC,IAAI,QAC5C,gBAAC,KAAD,CAAMC,KAAK,QAAQC,MAAM,QAAQC,GAAG,QAErCP,IAIQQ,EAAY,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAaL,GAAhB,8BACvB,gBAAC,KAAD,eAAKM,UAAU,UAAaN,GAC1B,gBAAC,KAAD,CAAKO,QAAQ,SAASC,SAAS,WAAWC,IAAI,QAC5C,gBAAC,KAAD,CAAMC,KAAK,QAAQC,MAAM,MAAMC,GAAG,QAEnCP,IC0DL,MA3DA,YAAyC,IAAbA,EAAY,EAAZA,SAC1B,OACE,gBAAC,KAAD,CACEN,WAAY,CACVe,GAAI,SAACd,GAAD,OAAW,gBAAC,KAAD,eAAUe,SAAUC,KAAYC,EAAE,UAAajB,KAC9DkB,GAAI,SAAClB,GAAD,OACF,gBAAC,KAAD,eAAUe,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWpB,KAExDqB,GAAI,SAACrB,GAAD,OACF,gBAAC,KAAD,eAAUe,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWpB,KAExDsB,GAAI,SAACtB,GAAD,OACF,gBAAC,KAAD,eAAUe,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWpB,KAExDuB,EAAG,SAACvB,GAAD,OACD,gBAAC,KAAD,eAAMe,SAAUC,KAAYQ,GAAG,KAAKJ,GAAG,QAAWpB,KAEpDyB,WAAY,SAACzB,GAAD,OACV,gBAAC,KAAD,eACEe,SAAUC,KACVU,SAAS,OACTF,GAAG,KACHJ,GAAG,QACCpB,KAGR2B,GAAI,SAAC3B,GAAD,OACF,gBAAC,KAAD,eAAMe,SAAUC,KAAYQ,GAAG,KAAKJ,GAAG,QAAWpB,KAEpD4B,GAAI,SAAC5B,GAAD,OAAW,gBAAC,KAAD,eAAUe,SAAUC,MAAgBhB,KACnD6B,EAAG,SAAC7B,GAAD,OAAW,gBAAC,KAAD,eAAMe,SAAUC,MAAgBhB,KAC9C8B,MAAO,SAAC9B,GAAD,OACL,uCACE+B,MAAO,CACLC,MAAO,OACPC,UAAW,OACXlB,SAAUC,KACVkB,OAAQ,cAENlC,KAGRmC,MAAO,SAACnC,GAAD,OACL,gBAAC,KAAD,eAAOe,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASxB,KAEtDI,WAAY,SAACJ,GAAD,OACV,gBAAC,EAAD,eAAYe,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASxB,KAE3Da,UAAW,SAACb,GAAD,OACT,gBAAC,EAAD,eAAWe,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASxB,KAE1DoC,gBAGD/B","file":"component---src-pages-index-mdx-39eead7207263cd357ee.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Nulogy content guide`}</h1>\n    <p>{`The purpose of this guide is to equip Nulogy employees with the tools and guidance necessary to approach writing copy in a consisitent manner. This will result in copy across our applicatioins being written in the voice of the company, not the voice of the individual.`}</p>\n    <p>{`This guide addresses how to write in Nulogyâ€™s voice, how to identify the proper tone for a given situation, the grammar rules we adhere to, and best practices for writing for translation and accessibility. When applied across our organization, this will improve the experiences of our customers on a global platform.`}</p>\n    <p>{`This guide can be used for any type of writing meant to be read with the voice of the organization. This includes, but is not limited to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Copywriting`}</li>\n      <li parentName=\"ul\">{`Marketing collateral`}</li>\n      <li parentName=\"ul\">{`In-application messages`}</li>\n      <li parentName=\"ul\">{`Training materials`}</li>\n      <li parentName=\"ul\">{`Standard Operating Procedures (SOPs)`}</li>\n      <li parentName=\"ul\">{`Help desk articles`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}