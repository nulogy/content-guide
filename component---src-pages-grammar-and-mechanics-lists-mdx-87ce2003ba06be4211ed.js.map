{"version":3,"sources":["webpack://nulogy.design/./src/pages/grammar-and-mechanics/lists.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","NoExample","YesExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","justifyContent","maxWidth","COPY_WIDTH","m","mb","fontSize","mt","listStyle","isMDXComponent","children","fontStyle","display","position","top","icon","color","mr","h1","h2","mx","h3","h4","p","blockquote","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"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","file":"component---src-pages-grammar-and-mechanics-lists-mdx-87ce2003ba06be4211ed.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nimport { Box, Flex, List, ListItem, Text } from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"../../components/CONSTANTS.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst NoExample = makeShortcode(\"NoExample\");\nconst YesExample = makeShortcode(\"YesExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Lists`}</h1>\n    <p>{`Lists can be either ordered or unordered. Ordered lists (numbered points 1, 2, 3…) are used if the list provides instructions to follow. All other lists should be unordered. No matter the type of list you are writing, it should include a lead in sentence to provide context.`}</p>\n    <Flex justifyContent=\"space-between\" maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <NoExample mdxType=\"NoExample\">\n      <List fontSize=\"small\" mt=\"x2\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">Click the \"assign pallets\" link.</ListItem>\n        <ListItem mdxType=\"ListItem\">Choose a work order.</ListItem>\n        <ListItem mdxType=\"ListItem\">Review pallets to be assigned.</ListItem>\n        <ListItem mdxType=\"ListItem\">Click the \"assign\" button</ListItem>\n      </List>\n    </NoExample>\n  </Box>\n  <Box mdxType=\"Box\">\n    <YesExample mdxType=\"YesExample\">\n      <Text fontSize=\"small\" mt=\"x2\" mdxType=\"Text\">\n        To assign pallets through item locator:\n      </Text>\n      <List fontSize=\"small\" listStyle=\"order\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">To assign pallets through item locator:</ListItem>\n        <ListItem mdxType=\"ListItem\">Choose a work order.</ListItem>\n        <ListItem mdxType=\"ListItem\">Review pallets to be assigned.</ListItem>\n        <ListItem mdxType=\"ListItem\">Click the \"assign\" button</ListItem>\n      </List>\n    </YesExample>\n  </Box>\n    </Flex>\n    <p>{`If a list item is a full sentence, then it should include proper punctuation. List items that are sentence fragments should not include punctuation.`}</p>\n    <Flex justifyContent=\"space-between\" maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <NoExample mdxType=\"NoExample\">\n      <Text fontSize=\"small\" mt=\"x2\" mdxType=\"Text\">\n        Attachment information includes:\n      </Text>\n      <List fontSize=\"small\" mt=\"x2\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">File name;</ListItem>\n        <ListItem mdxType=\"ListItem\">Upload date;</ListItem>\n        <ListItem mdxType=\"ListItem\">Description.</ListItem>\n      </List>\n    </NoExample>\n  </Box>\n  <Box mdxType=\"Box\">\n    <YesExample mdxType=\"YesExample\">\n      <Text fontSize=\"small\" mt=\"x2\" mdxType=\"Text\">\n        Attachment information includes:\n      </Text>\n      <List fontSize=\"small\" mt=\"x2\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">File name</ListItem>\n        <ListItem mdxType=\"ListItem\">Upload date</ListItem>\n        <ListItem mdxType=\"ListItem\">Description</ListItem>\n      </List>\n    </YesExample>\n  </Box>\n    </Flex>\n    <p>{`When three or more items are listed in a sentence we use the Oxford comma, which means that we include a comma before the “and” (e.g. This content guide includes sections on voice, tone, and grammar).`}</p>\n    <NoExample fontSize=\"small\" mdxType=\"NoExample\">\n  This content guide includes section on voice, tone and grammar.\n    </NoExample>\n    <YesExample fontSize=\"small\" mb=\"x4\" mdxType=\"YesExample\">\n  This content guide includes sections on voice, tone, and grammar.\n    </YesExample>\n    <p>{`Lists can vary in format, but all items within the same list should match format. For example, all sentence fragments, all beginning with a verb, all the same length.`}</p>\n    <Flex justifyContent=\"space-between\" maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <NoExample mdxType=\"NoExample\">\n      <Text fontSize=\"small\" mt=\"x2\" mdxType=\"Text\">\n        Use Nulogy's Operational Solution to report on:\n      </Text>\n      <List fontSize=\"small\" mt=\"x2\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">\n          Inventory adjustments made by individual staff members.\n        </ListItem>\n        <ListItem mdxType=\"ListItem\">Item reservation</ListItem>\n        <ListItem mdxType=\"ListItem\">Review labor on a job.</ListItem>\n      </List>\n    </NoExample>\n  </Box>\n  <Box mdxType=\"Box\">\n    <YesExample mdxType=\"YesExample\">\n      <Text fontSize=\"small\" mt=\"x2\" mdxType=\"Text\">\n        Use Nulogy's Operational Solution to report on:\n      </Text>\n      <List fontSize=\"small\" mt=\"x2\" mdxType=\"List\">\n        <ListItem mdxType=\"ListItem\">Inventory adjustments</ListItem>\n        <ListItem mdxType=\"ListItem\">Item reservations</ListItem>\n        <ListItem mdxType=\"ListItem\">Labor</ListItem>\n      </List>\n    </YesExample>\n  </Box>\n    </Flex>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}