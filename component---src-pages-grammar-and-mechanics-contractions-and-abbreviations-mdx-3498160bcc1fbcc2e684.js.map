{"version":3,"sources":["webpack://nulogy.design/./src/pages/grammar-and-mechanics/contractions-and-abbreviations.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","justifyContent","maxWidth","COPY_WIDTH","m","mb","isMDXComponent","YesExample","children","fontStyle","display","position","top","icon","color","mr","NoExample","h1","h2","mt","mx","h3","h4","p","blockquote","fontSize","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"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","file":"component---src-pages-grammar-and-mechanics-contractions-and-abbreviations-mdx-3498160bcc1fbcc2e684.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nimport { Flex, Box, Text } from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"../../components/CONSTANTS.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`Contractions and abbreviations`}</h1>\n    <p>{`As part of our goal to have a voice that is personal and concise, we employ the use of contractions to improve scanability and sentence length.`}</p>\n    <p>{`It is the nature of the supply chain industry to employ the use of many standard abbreviations, for example:`}</p>\n    <Flex justifyContent=\"space-between\" maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" mdxType=\"Flex\">\n  <Box mdxType=\"Box\">\n    <Text mdxType=\"Text\">\n      <strong>SKU</strong> - stock keeping unit\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>BOM</strong> - bill of materials\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>PO</strong> - purchase order\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>JIT</strong> - just in time\n    </Text>\n  </Box>\n  <Box mdxType=\"Box\">\n    <Text mdxType=\"Text\">\n      <strong>FIFO</strong> - first in, first out\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>SSCC</strong> - serial shipping container code\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>BOL</strong> - bill of lading\n    </Text>\n    <Text mdxType=\"Text\">\n      <strong>UOM</strong> - unit of measure\n    </Text>\n  </Box>\n    </Flex>\n    <p>{`When writing long form (help desk articles, etc.), always write out the full term when it is first mentioned and include the abbreviation in brackets immediately after the term. Any additional mentions of that term in the body content can then refer to the abbreviation.`}</p>\n    <p>{`In application, space is limited and it is often difficult to write out these terms in context. Also, our voice is an industry expert and is concise. Therefore we use the acronyms exclusively in our software body content. If the heading of a page in the application is or contains these terms, it is written out fully.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}