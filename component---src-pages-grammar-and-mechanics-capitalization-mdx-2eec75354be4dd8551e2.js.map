{"version":3,"sources":["webpack://nulogy.design/./src/pages/grammar-and-mechanics/capitalization.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","NoExample","YesExample","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","mb","isMDXComponent","children","fontStyle","display","position","top","icon","color","mr","h1","maxWidth","COPY_WIDTH","m","h2","mt","mx","h3","h4","p","blockquote","fontSize","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"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","file":"component---src-pages-grammar-and-mechanics-capitalization-mdx-2eec75354be4dd8551e2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst NoExample = makeShortcode(\"NoExample\");\nconst YesExample = makeShortcode(\"YesExample\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Capitalization`}</h1>\n    <p>{`In general, we always use sentence case. Sentence case is when the first letter of the first word of the phrase is capitalized and each word after is lowercase.`}</p>\n    <p>{`Some general rules:`}</p>\n    <h2>{`Headings`}</h2>\n    <p>{`Headings and subheadings use sentence case.`}</p>\n    <NoExample mdxType=\"NoExample\">Edit Production Records</NoExample>\n    <YesExample mdxType=\"YesExample\">Edit production records</YesExample>\n    <h2>{`Product names`}</h2>\n    <p>{`Use title case for the names of our products`}</p>\n    <NoExample mdxType=\"NoExample\">\n  The ecosystem solution allows brands insights into the production process.\n    </NoExample>\n    <YesExample mdxType=\"YesExample\">\n  The Ecosystem Solution allows brands insights into the production process.\n    </YesExample>\n    <h2>{`Tools and functions`}</h2>\n    <p>{`Tools and functions should be lowercase, unless they are beginning a sentence or header.`}</p>\n    <NoExample mdxType=\"NoExample\">Find pallets thorugh Item Locator</NoExample>\n    <YesExample mdxType=\"YesExample\">Find pallets through item locator.</YesExample>\n    <h2>{`Nulogy entities`}</h2>\n    <p>{`Only capitalize an entity within Nulogy that refers to a specific example.`}</p>\n    <NoExample mdxType=\"NoExample\">This pick list is for ship order 12345.</NoExample>\n    <YesExample mb=\"x4\" mdxType=\"YesExample\">This pick list is for Ship Order 12345</YesExample>\n    <p>{`General references to a Nulogy entity should be lowercase.`}</p>\n    <NoExample mdxType=\"NoExample\">Create a Ship Order</NoExample>\n    <YesExample mdxType=\"YesExample\">Create a ship order</YesExample>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}