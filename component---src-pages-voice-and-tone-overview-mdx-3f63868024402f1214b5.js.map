{"version":3,"sources":["webpack://nulogy.design/./src/pages/voice-and-tone/overview.mdx","webpack://nulogy.design/./src/components/MDXComponents.js","webpack://nulogy.design/./src/components/MarkdownRenderer.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent","YesExample","children","fontStyle","display","position","top","icon","color","mr","NoExample","h1","maxWidth","COPY_WIDTH","m","h2","mt","mx","h3","h4","p","mb","blockquote","fontSize","ul","li","a","table","style","width","textAlign","margin","Alert","Heading2"],"mappings":"8OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,yBACD,OAAO,QAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,qCACA,8EACA,6LACA,8RACA,4OAKJH,EAAWI,gBAAiB,G,wHC1BfC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaJ,GAAhB,8BACxB,gBAAC,KAAD,eAAKK,UAAU,UAAaL,GAC1B,gBAAC,KAAD,CAAKM,QAAQ,SAASC,SAAS,WAAWC,IAAI,QAC5C,gBAAC,KAAD,CAAMC,KAAK,QAAQC,MAAM,QAAQC,GAAG,QAErCP,IAIQQ,EAAY,SAAC,GAAD,IAAGR,EAAH,EAAGA,SAAaJ,GAAhB,8BACvB,gBAAC,KAAD,eAAKK,UAAU,UAAaL,GAC1B,gBAAC,KAAD,CAAKM,QAAQ,SAASC,SAAS,WAAWC,IAAI,QAC5C,gBAAC,KAAD,CAAMC,KAAK,QAAQC,MAAM,MAAMC,GAAG,QAEnCP,IC0DL,MA3DA,YAAyC,IAAbA,EAAY,EAAZA,SAC1B,OACE,gBAAC,KAAD,CACEL,WAAY,CACVc,GAAI,SAACb,GAAD,OAAW,gBAAC,KAAD,eAAUc,SAAUC,KAAYC,EAAE,UAAahB,KAC9DiB,GAAI,SAACjB,GAAD,OACF,gBAAC,KAAD,eAAUc,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWnB,KAExDoB,GAAI,SAACpB,GAAD,OACF,gBAAC,KAAD,eAAUc,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWnB,KAExDqB,GAAI,SAACrB,GAAD,OACF,gBAAC,KAAD,eAAUc,SAAUC,KAAYG,GAAG,KAAKC,GAAG,QAAWnB,KAExDsB,EAAG,SAACtB,GAAD,OACD,gBAAC,KAAD,eAAMc,SAAUC,KAAYQ,GAAG,KAAKJ,GAAG,QAAWnB,KAEpDwB,WAAY,SAACxB,GAAD,OACV,gBAAC,KAAD,eACEc,SAAUC,KACVU,SAAS,OACTF,GAAG,KACHJ,GAAG,QACCnB,KAGR0B,GAAI,SAAC1B,GAAD,OACF,gBAAC,KAAD,eAAMc,SAAUC,KAAYQ,GAAG,KAAKJ,GAAG,QAAWnB,KAEpD2B,GAAI,SAAC3B,GAAD,OAAW,gBAAC,KAAD,eAAUc,SAAUC,MAAgBf,KACnD4B,EAAG,SAAC5B,GAAD,OAAW,gBAAC,KAAD,eAAMc,SAAUC,MAAgBf,KAC9C6B,MAAO,SAAC7B,GAAD,OACL,uCACE8B,MAAO,CACLC,MAAO,OACPC,UAAW,OACXlB,SAAUC,KACVkB,OAAQ,cAENjC,KAGRkC,MAAO,SAAClC,GAAD,OACL,gBAAC,KAAD,eAAOc,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASvB,KAEtDG,WAAY,SAACH,GAAD,OACV,gBAAC,EAAD,eAAYc,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASvB,KAE3DY,UAAW,SAACZ,GAAD,OACT,gBAAC,EAAD,eAAWc,SAAUC,KAAYC,EAAE,SAASO,GAAG,MAASvB,KAE1DmC,gBAGD/B","file":"component---src-pages-voice-and-tone-overview-mdx-3f63868024402f1214b5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/content-guide/content-guide/src/components/MarkdownRenderer.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Voice and tone`}</h1>\n    <p>{`To begin, what is the difference between voice and tone?`}</p>\n    <p>{`As individuals, we all have a unique voice. Yes, we all sound different and have unique voice signatures, but a written word doesn’t sound one way or another, does it?`}</p>\n    <p>{`When we refer to the voice of a writing style, we mean the perceived perspective of the text. It is the ways in which we can imbue an author with personality. The ways in which their writing style tells us who they are and what are their values. Voice is constant.`}</p>\n    <p>{`Tone, on the other hand, constantly changes. Tone reflects the intention or emotion of the circumstance. For example, Nulogy’s tone will be different if we celebrate a success, or help a user troubleshoot an error.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\";\nimport { Icon, Box } from \"@nulogy/components\";\n\nexport const YesExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"check\" color=\"green\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n\nexport const NoExample = ({ children, ...props }) => (\n  <Box fontStyle=\"italic\" {...props}>\n    <Box display=\"inline\" position=\"relative\" top=\"half\">\n      <Icon icon=\"close\" color=\"red\" mr=\"x2\" />\n    </Box>\n    {children}\n  </Box>\n);\n","import React from \"react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport {\n  Alert,\n  Text,\n  Link,\n  List,\n  ListItem,\n  Heading1,\n  Heading2,\n  Heading3,\n  Heading4,\n} from \"@nulogy/components\";\nimport { COPY_WIDTH } from \"./CONSTANTS\";\nimport { YesExample, NoExample } from \"./MDXComponents\";\n\nfunction MarkdownRenderer({ children }) {\n  return (\n    <MDXProvider\n      components={{\n        h1: (props) => <Heading1 maxWidth={COPY_WIDTH} m=\"0 auto\" {...props} />,\n        h2: (props) => (\n          <Heading2 maxWidth={COPY_WIDTH} mt=\"x6\" mx=\"auto\" {...props} />\n        ),\n        h3: (props) => (\n          <Heading3 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        h4: (props) => (\n          <Heading4 maxWidth={COPY_WIDTH} mt=\"x4\" mx=\"auto\" {...props} />\n        ),\n        p: (props) => (\n          <Text maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        blockquote: (props) => (\n          <Text\n            maxWidth={COPY_WIDTH}\n            fontSize=\"24px\"\n            mb=\"x4\"\n            mx=\"auto\"\n            {...props}\n          />\n        ),\n        ul: (props) => (\n          <List maxWidth={COPY_WIDTH} mb=\"x4\" mx=\"auto\" {...props} />\n        ),\n        li: (props) => <ListItem maxWidth={COPY_WIDTH} {...props} />,\n        a: (props) => <Link maxWidth={COPY_WIDTH} {...props} />,\n        table: (props) => (\n          <table\n            style={{\n              width: \"100%\",\n              textAlign: \"left\",\n              maxWidth: COPY_WIDTH,\n              margin: \"32px auto\",\n            }}\n            {...props}\n          />\n        ),\n        Alert: (props) => (\n          <Alert maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x4\" {...props} />\n        ),\n        YesExample: (props) => (\n          <YesExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        NoExample: (props) => (\n          <NoExample maxWidth={COPY_WIDTH} m=\"0 auto\" mb=\"x2\" {...props} />\n        ),\n        Heading2,\n      }}\n    >\n      {children}\n    </MDXProvider>\n  );\n}\n\nexport default MarkdownRenderer;\n"],"sourceRoot":""}